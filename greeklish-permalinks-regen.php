<?php /*Plugin Name: greeklish-permalinks-regenPlugin URI: http://www.problogger.gr/images/greeklish-permalink.zipDescription: This plugin provides greeklish permalinks for greek titles. Additionally gives the ability to regenerate older permalinks.Author: Naskos VasilisVersion: 1.0Author URI: http://nask00s.tk*/// Based on Panagiotis Kontogiannis and Sandor Kovacs pluginsadd_action('admin_menu', 'register_greeklish_regen_submenu_page');function register_greeklish_regen_submenu_page() {    add_submenu_page(            'options-general.php', __('Permalink regeneration'), __('Permalink regeneration'), 'manage_options', 'regenerate-post-permalink', 'gr_rpp_callback');}// Regenerate post permalinkfunction regenerate_post_permalink($post_type = 'post') {    global $wpdb;    $myrows = $wpdb->get_results("SELECT id, post_title FROM $wpdb->posts WHERE post_status = 'publish' AND post_type='$post_type' ");    $counter = 0;    foreach ($myrows as $pid) :        $guid = home_url() . '/' . sanitize_title_with_dashes(get_greeklish_permalink($pid->post_title));        $sql = "UPDATE $wpdb->posts                      SET post_name = '" . sanitize_title_with_dashes(get_greeklish_permalink($pid->post_title)) . "',                         guid = '" . $guid . "'               WHERE ID = $pid->id";        $wpdb->query($sql);        $counter++;    endforeach;    return $counter;}/** POST META MANAGER PLUGIN PAGE * */function gr_rpp_callback() {    ?>    <div class="wrap" id='simple-sf'>        <div class="icon32" id="icon-options-general"><br></div><h2><?php _e('Permalinks regeneration'); ?></h2>        <?php _e('<p>Simply select the post type and click on the Regenerate permalinks button.It will regenerate all the permalinks based on title.  </p>        <p>Eg. <strong>"This is my article title"</strong> will have the following permalink:  <em>"this-is-my-article-title"</em></p>') ?>    <?php    if (isset($_POST['submit-regenerate-permalinks'])) :        $counter = regenerate_post_permalink($_POST['rpp-post-type']);        ?>                  <p>  <?php printf( __( '%1$s permalinks have been regenerated for all posts having type: <strong>%2$s</strong>' ), $counter, $_POST['rpp-post-type'] ); ?></p>                    <?php else:            ?>            <br/>            <form action="" method="post" name="rpp">                <table class="form-table">                    <tr>                        <th scope="row"><strong><?php _e('Select post type'); ?></strong></th>                        <td>                                  <select name="rpp-post-type">                            <?php                            $post_types = get_post_types(array('public' => true), 'names');                            foreach ($post_types as $post_type) {                                echo '<option value="' . $post_type . '">' . $post_type . '</option>';                            }                            ?>                                            </select>                        </td>                    </tr>                    <tr>                        <th scope="row">&nbsp;</th>                        <td>                                  <input type='submit'                                    onclick='if (!window.confirm("<?php _e('Are you really sure?') ?>")) return false'                                   name='submit-regenerate-permalinks' value='<?php _e('Regenerate permalinks') ?>' />                        </td>                    </tr>                </table>            </form>    <?php endif; ?>    </div>    <?php}function get_greeklish_permalink($text) {	if ( !is_admin() ) return $text;		$expressions = array(		'/[αΑ][ιίΙΊ]/u' => 'ai',		'/[εΕ][ιίΙΊ]/u' => 'oi',		'/[εΕ][ιίΙΊ]/u' => 'ei',			    '/[αΑ][υύΥΎ]([θΘκΚξΞπΠσςΣτTφΡχΧψΨ]|\s|$)/u' => 'af$1',	    '/[αΑ][υύΥΎ]/u' => 'av',	    '/[εΕ][υύΥΎ]([θΘκΚξΞπΠσςΣτTφΡχΧψΨ]|\s|$)/u' => 'ef$1',	    '/[εΕ][υύΥΎ]/u' => 'ev',		'/[οΟ][υύΥΎ]/u' => 'ou',	    '/(^|\s)[μΜ][πΠ]/u' => '$1b',	    '/[μΜ][πΠ](\s|$)/u' => 'b$1',	    '/[μΜ][πΠ]/u' => 'mp',	    '/[νΝ][τΤ]/u' => 'nt',	    '/[τΤ][σΣ]/u' => 'ts',	    '/[τΤ][ζΖ]/u' => 'tz',		'/[γΓ][γΓ]/u' => 'ng',	    '/[γΓ][κΚ]/u' => 'gk',	    '/[ηΗ][υΥ]([θΘκΚξΞπΠσςΣτTφΡχΧψΨ]|\s|$)/u' => 'if$1',	    '/[ηΗ][υΥ]/u' => 'iu',	    '/[θΘ]/u' => 'th',	    '/[χΧ]/u' => 'ch',	    '/[ψΨ]/u' => 'ps',			'/[αάΑΆ]/u' => 'a',		'/[βΒ]/u' => 'v',		'/[γΓ]/u' => 'g',		'/[δΔ]/u' => 'd',		'/[εέΕΈ]/u' => 'e',		'/[ζΖ]/u' => 'z',		'/[ηήΗΉ]/u' => 'i',		'/[ιίϊΙΊΪ]/u' => 'i',		'/[κΚ]/u' => 'k',		'/[λΛ]/u' => 'l',		'/[μΜ]/u' => 'm',		'/[νΝ]/u' => 'n',		'/[ξΞ]/u' => 'x',		'/[οόΟΌ]/u' => 'o',		'/[πΠ]/u' => 'p',		'/[ρΡ]/u' => 'r',		'/[σςΣ]/u' => 's',		'/[τΤ]/u' => 't',		'/[υύϋΥΎΫ]/u' => 'i',		'/[φΦ]/iu' => 'f',		'/[ωώ]/iu' => 'o'	);		$text = preg_replace( array_keys($expressions), array_values($expressions), $text );	return $text;}add_filter('sanitize_title', 'get_greeklish_permalink', 1);?>